Keeping the (Semantic) Web Hackable
date: 2011-07-01
blurb: OWL reasoning, clusters and big Java APIs are good for certain Semantic Web applications, but the SemWeb will never come if it's not easily hackable.
zine: The Data Web
categories: Linked Data

Below is a rant I wrote over a year ago to the Biohackathon mailing
list. I still feel it's important, so here it is, somewhat edited, for
the world wide web. It was a reply to a message *that I edited here*,
so I let the author be nameless since I simply used his message here
to broadly represent a point of view among SemWeb people.

> (1) Linked Data people want resolvable URIs.  But nothing about the
> Semantic Web says we need Linked Data.
>
> Linked Data does not *explicitly* improve computable semantics in
> any way. (Implicitly it does by defining truths about the subject,
> but that's a story for another e-mail)
>
> (2) how do I know a statement I make about a subject can be
> logically combined with another statement by someone else about the
> subject?  Using the same URI.  That's it.  No resolution, different
> formats, etc. required.  The Semantic Web != Linked Data.

I agree: We need stable identifiers to identify concepts in order to
do automated reasoning and knowledge discovery.

All I'm saying is that I also, in addition, want URLs to be
resolvable. And not only to HTML, also to RDF (and ideally also to
JSON).

To give those who are still interested a little background, I'm
interested in keeping the web hackable. That's what made the web big:
it was easy to do stuff. It is glued together from small building
blocks: HTML, HTTP, JavaScript, etc. It's often ugly, but it enabled
people to do stuff. There's a reason why "enterprise" tech has never
made it beyond large corporations, and even they are not happy with
it. It's monolithic, complicated and unflexible. Bioinformatics was
driven mostly by biologists who wrote Perl CGIs, not computer
scientists. And we may say their CGIs are ugly, but they exist. This
technology enabled prototyping and exploration.

I see the "enterprise" danger in the Semantic Web world. If you really
do fancy stuff, then go ahead and set up the full infrastructure. But
if any developer needs to understand several naming and resolving
conventions, and use a 100-class Java API, and set up a cluster to
work with the data, it's not gonna happen.

I want people to be able to write a small Perl program that starts a
local [4store](http://4store.org/), and then you paste in a few URLs,
and you have an instant knowledge repository. Or write a web page with
JQuery that just GETs some RDF in JSON and formats it nicely using
some JavaScript. To an academic Semantic Web researcher these look
like toy applications, but they are not, because they enable people to
get their hands dirty and do something with your data instead of
waiting for the final Semantic Web vision to take off.

I was never involved in the Linked Data movement but I assume I'm
repeating some of what these people have been saying.

Sorry for the rant :-) Rest assured I'm all for stable identifiers and
OWL and reasoning, it just shouldn't be the only thing we can do with
RDF.
